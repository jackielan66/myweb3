'use client'
import { ConnectButton } from '@rainbow-me/rainbowkit';
import type { NextPage } from 'next';
import Head from 'next/head';
import Header from '../../components/Header';
import { Box, Button, Container, Snackbar, TextField, Typography } from '@mui/material';
import { useAccount, useBalance, useReadContract, useSimulateContract, useTransactionReceipt, useWaitForTransactionReceipt, useWriteContract } from 'wagmi';
import { ABI_CONTRACT, ADDRESS_CONTRACT, convertModel, DEF_POOL_ID } from '../../utils/contractConfig'
import { formatEther, parseEther } from 'viem';
import { use, useEffect, useMemo, useState } from 'react';
import { ToastContainer, toast } from 'react-toastify';
import { useParams } from 'next/navigation';
import { NativeCurrencyClaim ,ERC20TokenClaim} from '../../components/Claim';

const ClaimPage: NextPage = () => {
  const params = useParams<{ poolId: string }>() || {};

  const curPoolInfo = useReadContract({
    address: ADDRESS_CONTRACT.RccStake,
    abi: ABI_CONTRACT.RCCStake,
    functionName: 'pool',
    args: [params.poolId],
    query: {
      enabled: Boolean(params.poolId),
    },
  })
  const poolInfoModel = convertModel(curPoolInfo.data, 'pool')
  const isAddressZero = useMemo(() => {
    return poolInfoModel.stTokenAddress === ADDRESS_CONTRACT.AddressZero
  }, [poolInfoModel])

  return (
    <div>
      <Head>
        <title>Claim Reward</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
      </Head>
      <Header />
      <main>
        {
          isAddressZero && <NativeCurrencyClaim poolId={params.poolId} />
        }
        {
          !isAddressZero && <ERC20TokenClaim poolId={params.poolId} />
        }

      </main>
    </div>
  );
};

export default ClaimPage;
